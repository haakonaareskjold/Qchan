stages:
    - build
    - deploy

build_composer_staging:
  stage: build
  tags:
    - staging
  only:
    - staging
  image: lorisleiva/laravel-docker:latest
  before_script:
    - cp .env.production .env
    - echo "APP_ENV=local" >> .env
    - echo "APP_URL=http://localhost" >> .env
    - echo "DB_PASSWORD=password" >> .env
  script:
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - php artisan key:generate

  cache:
    key: ${CI_COMMIT_REF_SLUG}-composer
    paths:
      - vendor/
  artifacts:
    paths:
      - vendor/
      - .env
    expire_in: 1 days
    when: always

build_npm_staging:
  stage: build
  tags:
    - staging
  only:
    - staging

  cache:
    key: ${CI_COMMIT_REF_SLUG}-npm
    paths:
      - node_modules/

  # Install and compile.
  script:
      - npm install
      - npm run production

  # Provide the other jobs of the pipeline with
  # the node dependencies and the compiled assets.
  artifacts:
    expire_in: 1 month
    paths:
      - node_modules/
      - public/css/
      - public/js/
      - public/mix-manifest.json

build_composer_production:
  stage: build
  tags:
    - production
  only:
    - /^([v]+[0-9]+[.]+[0-9])/
  image: lorisleiva/laravel-docker:latest
  before_script:
    - cp .env.production .env
    - echo "${AWS_BUCKET}" >> .env
    - echo "${AWS_ACCESS_KEY_ID}" >> .env
    - echo "${AWS_SECRET_ACCESS_KEY}" >> .env
    - echo "FILESYSTEM_DRIVER=s3" >> .env
    - echo "APP_URL=https://qchan.haakon.wtf/" >> .env
    - echo "${DB_PASSWORD}" >> .env
  script:
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - php artisan key:generate

  cache:
    key: ${CI_COMMIT_REF_SLUG}-composer
    paths:
      - vendor/
  artifacts:
    paths:
      - vendor/
      - .env
    expire_in: 1 days
    when: always

build_npm_production:
  stage: build
  tags:
    - production
  only:
    - /^([v]+[0-9]+[.]+[0-9])/
  cache:
    key: ${CI_COMMIT_REF_SLUG}-npm
    paths:
      - node_modules/

  script:
      - npm install
      - npm run production

  artifacts:
    expire_in: 1 days
    paths:
      - node_modules/
      - public/css/
      - public/js/
      - public/mix-manifest.json



deploy_staging:
  stage: deploy
  only:
    - staging
  tags:
    - staging
  image: tiangolo/docker-with-compose
  script:
    - docker-compose -f docker-compose.staging.yml down
    - docker-compose -f docker-compose.staging.yml up -d --build
  after_script:
    - docker exec qchan_api_1 php artisan migrate --force
    - ln -s /var/www/storage/app/public/avatars public/avatars
    - ln -s /var/www/storage/app/public/backgrounds public/backgrounds

deploy_production:
  stage: deploy
  tags:
    - production
  only:
    - /^([v]+[0-9]+[.]+[0-9])/
  except:
    - branches
  image: tiangolo/docker-with-compose
  script:
    - docker-compose -f docker-compose.prod.yml down
    - docker-compose -f docker-compose.prod.yml up -d --build
  after_script:
    - docker exec qchan_api_1 php artisan migrate --force
